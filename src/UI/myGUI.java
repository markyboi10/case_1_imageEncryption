package UI;

import imageencryption.BytesToRGB;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import lombok.Getter;

/**
 *
 * @author Mark Case
 */
public class myGUI extends javax.swing.JFrame {

    // Objects
    BufferedImage getImg;
    @Getter public static File selFile1 = null; //lombok getter for simplicity
    public static String path1 = null;


    BytesToRGB btRGB = new BytesToRGB(); // Access to methods from class

    /**
     * Creates new form myGUI
     */
    public myGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new keeptoo.KGradientPanel();
        uploadPNG = new javax.swing.JButton();
        encryptECB = new javax.swing.JButton();
        encryptCBC = new javax.swing.JButton();
        uploadLabel = new javax.swing.JLabel();
        viewEncryption = new javax.swing.JButton();
        encryptedImageLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rootPanel.setkEndColor(new java.awt.Color(65, 67, 106));
        rootPanel.setkStartColor(new java.awt.Color(152, 64, 99));

        uploadPNG.setForeground(new java.awt.Color(254, 150, 103));
        uploadPNG.setText("Upload PNG");
        uploadPNG.setBorderPainted(false);
        uploadPNG.setContentAreaFilled(false);
        uploadPNG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPNGActionPerformed(evt);
            }
        });

        encryptECB.setForeground(new java.awt.Color(254, 150, 103));
        encryptECB.setText("Encrypt ECB");
        encryptECB.setBorderPainted(false);
        encryptECB.setContentAreaFilled(false);
        encryptECB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptECBActionPerformed(evt);
            }
        });

        encryptCBC.setForeground(new java.awt.Color(254, 150, 103));
        encryptCBC.setText("Encrypt CBC");
        encryptCBC.setBorderPainted(false);
        encryptCBC.setContentAreaFilled(false);
        encryptCBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptCBCActionPerformed(evt);
            }
        });

        uploadLabel.setBackground(new java.awt.Color(102, 102, 102));
        uploadLabel.setForeground(new java.awt.Color(0, 0, 0));
        uploadLabel.setOpaque(true);

        viewEncryption.setForeground(new java.awt.Color(254, 150, 103));
        viewEncryption.setText("View Encryption");
        viewEncryption.setBorderPainted(false);
        viewEncryption.setContentAreaFilled(false);
        viewEncryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEncryptionActionPerformed(evt);
            }
        });

        encryptedImageLabel.setBackground(new java.awt.Color(102, 102, 102));
        encryptedImageLabel.setForeground(new java.awt.Color(0, 0, 0));
        encryptedImageLabel.setOpaque(true);

        titleLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(254, 150, 103));
        titleLabel.setText("Image Encryption Demo");

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(uploadPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)
                        .addComponent(encryptECB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(49, 49, 49)
                        .addComponent(encryptCBC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(uploadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(130, 130, 130)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rootPanelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(viewEncryption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rootPanelLayout.createSequentialGroup()
                        .addComponent(encryptedImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(80, 80, 80))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rootPanelLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(235, 235, 235))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uploadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                    .addComponent(encryptedImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(encryptECB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(encryptCBC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewEncryption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /*
    Allows user to choose and upload their local photos to the GUI
    */
    private void uploadPNGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPNGActionPerformed
        JFileChooser getFile = new JFileChooser();
        getFile.setCurrentDirectory(new File(System.getProperty("user.home")));
        // Filter files
        FileNameExtensionFilter filter1 = new FileNameExtensionFilter("*.Images", "jpg", "png"); // In place for all files types anyways
        getFile.addChoosableFileFilter(filter1);
        int res = getFile.showSaveDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            selFile1 = getFile.getSelectedFile();
            path1 = selFile1.getAbsolutePath();
            uploadLabel.setIcon(resize(path1)); // Resizes img to label
            System.out.println("1st selFile1 = " + selFile1);
            try {
                getImg = ImageIO.read(selFile1);
            } catch (IOException ex) {
                System.out.println(ex);
            } // End try-catch
            System.out.println(path1);
        } // End if
    }//GEN-LAST:event_uploadPNGActionPerformed

    // Envokes ECB encryption
    private void encryptECBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptECBActionPerformed
        if (uploadLabel.getIcon() == null) {
            JOptionPane.showMessageDialog(rootPanel, "Upload a file first!", "Alert", JOptionPane.WARNING_MESSAGE); // warning message
        } else {
            try {
                btRGB.convertBytesToRGB_ECB();
            } catch (IOException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
                Logger.getLogger(myGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_encryptECBActionPerformed

    // Envokes CBC encryption
    private void encryptCBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptCBCActionPerformed
        if (uploadLabel.getIcon() == null) {
            JOptionPane.showMessageDialog(rootPanel, "Upload a file first!", "Alert", JOptionPane.WARNING_MESSAGE); // warning message
        } else {
            try {
                btRGB.convertBytesToRGB_CBC();
            } catch (IOException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
                Logger.getLogger(myGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_encryptCBCActionPerformed
    
    // Displays encrypted img to user
    private void viewEncryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEncryptionActionPerformed
        if (uploadLabel.getIcon() == null) {
            JOptionPane.showMessageDialog(rootPanel, "Upload a file and hit an encryption option first!", "Alert", JOptionPane.WARNING_MESSAGE); // warning message
        } else {
            revalidate(); // Refresh GUI
            String fileName = System.getProperty("user.home") + File.separator + "Pictures\\image-enc.png"; // File location on users directory
            encryptedImageLabel.setIcon(resize(fileName)); // Resize to label
        }
    }//GEN-LAST:event_viewEncryptionActionPerformed

    // Resize method for images on jLabels
    public ImageIcon resize(String imgPath) {
        ImageIcon path = new ImageIcon(imgPath);
        Image img = path.getImage();
        Image newImg = img.getScaledInstance(uploadLabel.getWidth(), uploadLabel.getHeight()
        , Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    } // End resize

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton encryptCBC;
    private javax.swing.JButton encryptECB;
    public javax.swing.JLabel encryptedImageLabel;
    private keeptoo.KGradientPanel rootPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel uploadLabel;
    private javax.swing.JButton uploadPNG;
    private javax.swing.JButton viewEncryption;
    // End of variables declaration//GEN-END:variables

} // End myGUI class
